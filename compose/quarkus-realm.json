{
  "id" : "97fd0029-c661-46b5-85dd-fc49db2dd645",
  "realm" : "quarkus",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "bruteForceStrategy" : "MULTIPLE",
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "3c713c9b-6807-4a7e-ba2e-026659a886c1",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "97fd0029-c661-46b5-85dd-fc49db2dd645",
      "attributes" : { }
    }, {
      "id" : "b572bd78-3be5-426b-9573-fe05bba00f55",
      "name" : "default-roles-quarkus",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "97fd0029-c661-46b5-85dd-fc49db2dd645",
      "attributes" : { }
    }, {
      "id" : "c3236359-fae9-4ad5-8f1e-15f7c01f4e56",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "97fd0029-c661-46b5-85dd-fc49db2dd645",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "0e499ca3-fcc1-47d5-9f3d-2c47ea17068e",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "a5f0a198-47ac-4a2e-9d30-d5a0e4354bec",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "95475294-a15b-4242-b15b-0db89c0357ba",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "325559f1-45a2-4d8a-9152-1f75904437d2",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "4191b2ee-d813-4cf2-a555-631cfdbee649",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "a282abc7-ca31-413f-b016-add8edfd4d73",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "17900ed9-a94e-423f-a6d8-1c2a2f7e90fe",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "4510d352-5704-4d81-86a5-aa2fe12953f3",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "836810e5-846d-40d6-bd75-f46157448946",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "create-client", "query-users", "manage-clients", "manage-identity-providers", "query-clients", "impersonation", "manage-authorization", "query-realms", "view-realm", "view-identity-providers", "manage-realm", "view-clients", "view-events", "manage-users", "manage-events", "query-groups", "view-authorization", "view-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "65526568-5905-4e38-82e0-ec0c81d77114",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "e1758bd4-3c5e-4907-82bc-1c01b18d7276",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "96e304f6-4efe-4182-8f45-f5a5b30acd3a",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "d0e981af-d5cb-4a91-9e7c-c9fa4835391f",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "ad7b7793-5f26-4dac-ba1a-ebd6edfd826a",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "df702a5e-d1b8-4542-bfa7-567ebccfb74e",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "9f176d3f-ff03-4b97-973a-ed33693ca6a8",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "d7e07963-7f47-47bb-887b-a255e2a366c4",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "123ec989-fd8f-4eb1-a74a-a28a8f552893",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      }, {
        "id" : "7ab79b4d-62c1-481c-a281-5dfaa28527b2",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "quarkus-app" : [ {
        "id" : "98d7d593-7ade-4b60-a358-145bc35d1c18",
        "name" : "quarkus_login",
        "description" : "",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "dee0218a-7afc-4970-8968-df93fb0b12b5",
        "attributes" : { }
      }, {
        "id" : "6feb4223-f804-4e7b-96d1-eb8d2e5f98d1",
        "name" : "quarkus_admin",
        "description" : "",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "dee0218a-7afc-4970-8968-df93fb0b12b5",
        "attributes" : { }
      } ],
      "broker" : [ {
        "id" : "be07c119-8f1c-4692-9a41-e01e600cd261",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c092ada9-f84c-4aa3-b0f0-e6cd9913adbe",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "4f965ff4-3fbc-4ee6-be74-a3a9b5ac1dae",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "1091687a-82e1-44ae-b350-cc3738c6b370",
        "attributes" : { }
      }, {
        "id" : "83d29570-0e35-469c-8f8a-5ecefbe82fe3",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1091687a-82e1-44ae-b350-cc3738c6b370",
        "attributes" : { }
      }, {
        "id" : "5e27224a-7b94-43ca-ad1b-6cfc32d0b768",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "1091687a-82e1-44ae-b350-cc3738c6b370",
        "attributes" : { }
      }, {
        "id" : "14d16fc4-54d1-405c-afed-d5fca93a81ca",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1091687a-82e1-44ae-b350-cc3738c6b370",
        "attributes" : { }
      }, {
        "id" : "a2afaf30-fbac-44b1-9af0-b1ee38144aea",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1091687a-82e1-44ae-b350-cc3738c6b370",
        "attributes" : { }
      }, {
        "id" : "0ac766fd-fa54-40bd-add9-767c911ab581",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1091687a-82e1-44ae-b350-cc3738c6b370",
        "attributes" : { }
      }, {
        "id" : "e345875a-65ab-45b5-8334-4e83050b15d0",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1091687a-82e1-44ae-b350-cc3738c6b370",
        "attributes" : { }
      }, {
        "id" : "152ca48f-4330-4634-a04f-2022f92011db",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1091687a-82e1-44ae-b350-cc3738c6b370",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ {
    "id" : "19812fc8-4ec2-455e-951e-c06cc82338ec",
    "name" : "admin",
    "description" : "",
    "path" : "/admin",
    "subGroups" : [ ],
    "attributes" : { },
    "realmRoles" : [ ],
    "clientRoles" : { }
  }, {
    "id" : "cf74738d-8287-4689-8675-8058175ff371",
    "name" : "user",
    "description" : "",
    "path" : "/user",
    "subGroups" : [ ],
    "attributes" : { },
    "realmRoles" : [ ],
    "clientRoles" : { }
  } ],
  "defaultRole" : {
    "id" : "b572bd78-3be5-426b-9573-fe05bba00f55",
    "name" : "default-roles-quarkus",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "97fd0029-c661-46b5-85dd-fc49db2dd645"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "999a6b79-d798-4396-92e0-a9b5c041120d",
    "username" : "alice",
    "firstName" : "Alice",
    "lastName" : "Exemplary",
    "email" : "alice@keycloak.internal",
    "emailVerified" : true,
    "enabled" : true,
    "createdTimestamp" : 1755975102713,
    "totp" : false,
    "credentials" : [ {
      "id" : "6d9ecc45-24fd-4b87-9aa2-6173429f4568",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1755975765384,
      "secretData" : "{\"value\":\"AXpOjDQO+ej6XAZGXLlvmUjqZUC3Q41VoXbw/cdGSRo=\",\"salt\":\"iqzUfsHQjg14VBZfhwO0Eg==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-quarkus" ],
    "clientRoles" : {
      "quarkus-app" : [ "quarkus_login", "quarkus_admin" ]
    },
    "notBefore" : 1755975772,
    "groups" : [ "/admin", "/user" ]
  }, {
    "id" : "81233497-43e0-4d29-8d35-534df100e0ab",
    "username" : "bob",
    "firstName" : "Bob",
    "lastName" : "Exemplary",
    "email" : "bob@keycloak.internal",
    "emailVerified" : true,
    "enabled" : true,
    "createdTimestamp" : 1755975147677,
    "totp" : false,
    "credentials" : [ {
      "id" : "b8e512b0-1e74-4861-ae36-1bfb1fc6dc9b",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1755975745437,
      "secretData" : "{\"value\":\"7h2IWy6MMIlmdvD3sCbaPuAe+mAFbNk2FyEmm/l0QAE=\",\"salt\":\"59IbgBRirOxC+xhNOifekA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-quarkus" ],
    "clientRoles" : {
      "quarkus-app" : [ "quarkus_login" ]
    },
    "notBefore" : 0,
    "groups" : [ "/admin", "/user" ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "1091687a-82e1-44ae-b350-cc3738c6b370",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/quarkus/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/quarkus/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "505497fb-63ff-4de0-bf19-aaed3017a36f",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/quarkus/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/quarkus/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "fbcda934-4763-4caa-b7c6-ff13f6dce19c",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "0a749f1e-77c1-4b35-af43-b2c8b2e143ff",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "c092ada9-f84c-4aa3-b0f0-e6cd9913adbe",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "dee0218a-7afc-4970-8968-df93fb0b12b5",
    "clientId" : "quarkus-app",
    "name" : "",
    "description" : "",
    "rootUrl" : "http://localhost:8080",
    "adminUrl" : "http://localhost:8080",
    "baseUrl" : "http://localhost:8080",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "u3s9ikZqFbi8jdV8B4O7wJOv2ymOMUmb",
    "redirectUris" : [ "http://localhost:8080/*" ],
    "webOrigins" : [ "http://localhost:8080" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1755974967",
      "backchannel.logout.session.required" : "true",
      "standard.token.exchange.enabled" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "bfef14cb-98ec-4bbf-a520-40e746a3d477",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "fec4b86e-b6bc-4b70-b92e-e284736b45ba",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/quarkus/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/quarkus/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "fe848345-d77d-462d-b8a4-45b29866b70c",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "05293062-55c1-44dd-8bc9-8e603de21fe8",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "d8da64a1-c5c3-4029-bb16-c9c1109b836d",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "422a4c1c-4211-4cdc-8697-7a06a62b607f",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "f44a78fc-0879-4d20-be0b-5e313950c40a",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "1b76061f-5367-4bad-b72d-8f9417e98941",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "9191c664-f78f-463a-8936-e9e785352b56",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "1ffb884f-45a0-4988-a83d-d304f66b1cc1",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c64f7aae-c21d-4a90-b8c5-b8c8e40d68aa",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "false",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "lightweight.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "26d67f82-a391-45ab-bb19-ab2627cbce76",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "09a1b0f8-d1b9-4e83-8289-ae0ed5339a14",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "false",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "lightweight.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "f5a7a0cf-a833-48cd-8b77-3843aa5c0de4",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "1fc10ac3-fd5f-4166-b499-17d7e942c636",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "074670c6-5e36-4dd0-9ad2-81e0c14aee5d",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "c355bc7a-0a3f-4a43-b3fa-b859ad7d81ab",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "75418b11-1544-4da0-8530-0dd696735737",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cf1daa30-9b2d-46cd-a56a-e0ee9792b5f7",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f15ba22c-329c-46a5-b99c-2f7d0911dd4d",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "926df87e-0693-497f-aa30-6fe2770f92a4",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "187caf32-c0e7-4ae7-a7f2-192cebd794d2",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "6217c3f3-91e0-46c8-a9be-66001995b2da",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b6b884b4-8983-4777-b576-d14d2f1242c6",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e3cbf950-f244-4b56-9b16-dfd6239e319d",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6ce99dac-3c33-4e10-8994-a8ea690cda99",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e1af5e31-6d88-4a1c-b242-d93f6aa06b32",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "61380090-8671-457b-a7e6-2f84220432a2",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3be2a7d3-dc2f-49b1-8daa-f89efaf2c81d",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ca4c9683-66f5-4bd6-b528-e37cc1c62750",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "802ee047-1a2b-4500-a6c2-af4a0b385279",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "49240555-900e-4461-a183-71b744ee0a91",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "ca56a3bc-0a4b-45f0-843b-4983c60ce8a9",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "cd79bd7c-6f04-49e7-892d-f5f05c7a8aed",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "5fa8e9be-c172-44a3-b34c-09010e1d2a00",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "14a1ac02-3030-483d-a0ed-143bf6da4dcb",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "84c0ef34-c1af-4437-9401-a1f21b41c8cf",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "c1f9e24e-6469-4921-9bfa-c9556e48b340",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "a0c49686-66f2-4fd5-960c-894934134dc6",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "7f8d810f-be53-4d91-8b0a-df769109d931",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "d7a59e99-4d9e-4bd2-8381-98e4f1bfd6e6",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "780017ac-27d8-4131-8b68-2d484bfa22f7",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "52df3893-4a2d-4002-a2de-6ee0cada6858",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "476a34d4-246b-41f3-98c7-e63ee7ec069f",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c20d5d27-4b6a-419f-8f60-4b39d2823ece",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "8a7f80a1-d193-427f-a9f8-6149c868b356",
    "name" : "service_account",
    "description" : "Specific scope for a client enabled for service accounts",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "ce595ea5-9d92-4fed-aee6-c1c4faf3f846",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "30e5040a-88f0-46f0-bbe6-8d5e43916706",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c5410a91-ca5b-4bd5-9664-9c9fb5e826a9",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "da97d1c8-e3d8-4f99-adef-15f64e7b8f65",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "52717a8a-1404-4ef5-8ada-57245c55afad",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "ae750997-d470-4736-b769-c6e2266cb0dc",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "54681877-08b3-4130-a20d-d71bddd7f225",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "ac5a40e9-cff4-47ee-9d0f-e74884c456ad",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "oidc-usermodel-attribute-mapper", "saml-role-list-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "id" : "63fbe422-d984-46da-89f6-fce841f757b6",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "c9c150d3-3344-4d1d-834f-70e17559d3ce",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "a3c63a6d-8d0b-4e61-9b14-4e679684e4f4",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "4c0e0db8-cfec-4698-9e80-9e27da107dfc",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-address-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-full-name-mapper", "oidc-usermodel-property-mapper", "oidc-usermodel-attribute-mapper", "saml-role-list-mapper" ]
      }
    }, {
      "id" : "a59f2894-418a-47c8-a083-0c5de1a928b0",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "3e4d8329-6509-4ee4-808d-e8a5efc706f2",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "596b8c97-3328-45b2-9af8-5cb0736b906f" ],
        "secret" : [ "16UcPc39Nt-oOSfGxaUr7ow_cl30S6ywGhpe6uKp1IyKs1FDrtzbntA1FWSM2eLowDehN2YlhufgONUkp8Id2sIGdR5PEcCdaYJPuj9DRMurxRIpZSxOyz2_ev9xvWvOT_92-CnlQ0hel8O60V-COUBG2jxHUVsqtBkDb7TvGJI" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "5609bf21-c0c3-4740-b15d-88d52cbfc152",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAzXFdfigJzKMeJMxvnEO+la8+dQdgZvLnZfS2rgvaTYk5/5d3+RmWMq5IiLje6OFBkDbWkBwJHZANAk6g/k/gyUFLxYUG/2RxNhAsIzJSpzOZXuAXRFe7yYILQbRiE9m9FYqB/ili955netjp/2NoUke4mT4jxwtpO8YLQiu5QmZX4VK31XQTCJP7K1qGShGKsq/WZWOO+PtQzJtra1K3v72qt+0inn1E9c2sWmxubH9j9HEyXHYZNJotknrGLAYqZutjtqfp5dtVzRbamx+KoEUTzYhzpoOODaK9r5IcVQOawC18xgM2A6mRSz6tQsCAGGo5sOScyHKVzeOOCinLPQIDAQABAoIBABqZAHpuixQ+Ew8/E30W7TP6X/rtRU8WyBwUUllWqgDrUQG09cCfjilKFJR04NEkJqWZ3+4A3zI/XdvMW74JD+hmZn2wQw9qDNkrv1cgMwC4JrVYjFKaDDMivbvYM3Fv+XGyQLGr4Ib/8FRAhIz+rPkoFW9rkty4bruhIICE4iOFGooI1N4MlqxYKkfAnStWiARE3JaeJGyERhZB+e25S6xlWQBOdXya/fxa7hAA9Yytb61Jvl/PudfXBhTXjNQ5ImFQduiYjjFgG7/LwCF+57NqlmX1hv0CZ7w8uP3e36DjCIV6wjMXkHPe6Z2LlXPVIwHuiFoCRsrujcUhauGvAhECgYEA8Xm90kqA8+84bAeiAykd2zFtiyuV/eIFUJ5RgLieyQTu0A5onLQ1J+yvMt1efQgsrL+wgBINDxLY7eamNSwk7pGAn8CS494F2jrl5B6gVAFwp8tIYCuzUH8q9sTgLBuJy+dHk08TAnUeuX3xcLSvp2dU4U464uzwdKCY3TcEem0CgYEA2czKCib8ABePTMtV8YGOTiOaFTvodrEvgUcBS5TF8ryeITyi71k3Zy4JaNu5rdkmDuqMMVHaKA1/oKHctSb0ELovJZhmW6M3j1JFuSWvILS9qbN9NpdObTGGZViR1ewFHSZyOlwR5PYWowSIXaIeq4HmqyNGmFZ+PSfa7TIKEhECgYEAlD+knTVmY9xK7G/nND+K9+YplZaFuF+J2cvIx9kQiuM/ZnZiHUq5k7BIg1bKysI5AzmQN6BdahKtIalIAz790YV8zRciV0kYmLkuKFXxIoHb0vgHkBtkNBhOnT+TTSD/ATMVi0exqQGUglbi4snbSVA0GTq5BlZm7YMnNjCvzCUCgYEAqjoLN0Ac+Z1wXN8Xvvg5Vw0wYqQ+HnaB4JK0inQu+nc9SFDyMAwU50nuBMynJR9xRXtAM1P8JA3Y0J1xuQxG+cPrEYE5jynUROpSoFC5veBF1Jr6pG5B18o7dn5xDTe5D317De3j9oX4T1U9l6EcQ4P125BonqwLYpUB4R2ZDWECgYBxAi0zKuw7fi6wUUzTos8gf4Z4Ym8O6K27Vn/e92R6O49Ny+Dn8TpqmOBJz+7fJbNgbU4oaTF83N+lAgUhwdMU5xBWZuWmliPkIggF+jbY2xi6oVJp0muEtPM7erl4G512XX109AZAnL+yH3NUauYEuaa2Kq0im2W9ELCafd6+NQ==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICnTCCAYUCBgGY2EJ82TANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdxdWFya3VzMB4XDTI1MDgyMzE4NDYzMloXDTM1MDgyMzE4NDgxMlowEjEQMA4GA1UEAwwHcXVhcmt1czCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM1xXX4oCcyjHiTMb5xDvpWvPnUHYGby52X0tq4L2k2JOf+Xd/kZljKuSIi43ujhQZA21pAcCR2QDQJOoP5P4MlBS8WFBv9kcTYQLCMyUqczmV7gF0RXu8mCC0G0YhPZvRWKgf4pYveeZ3rY6f9jaFJHuJk+I8cLaTvGC0IruUJmV+FSt9V0EwiT+ytahkoRirKv1mVjjvj7UMyba2tSt7+9qrftIp59RPXNrFpsbmx/Y/RxMlx2GTSaLZJ6xiwGKmbrY7an6eXbVc0W2psfiqBFE82Ic6aDjg2iva+SHFUDmsAtfMYDNgOpkUs+rULAgBhqObDknMhylc3jjgopyz0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAUs+T/fv5bPtGF8SB1Cfg33E5/dBlhOk6sYQ+4CBiSEnjzdMO6gI3Luzf2aJClHWuW40h4aO1PfZ2Q5YERcslagtzoMuXNJ6UdeixLWnJ1eezD3S/TG2gyCIVOvc/amaSp4pGw1QkXKDRlEWsI6+DC5QV5orvFPORwg9S6jd1RSXflTG6VqONnqAD3jn1VhNFyZYL5zA0kxJSwh1tqwdmrPcP7UedINDBKzQ+RahCDHSJyJuMl36O3L6nxHTHtZLqoZG6sOlDUglp6r026r5abhUl0lM3d1fr8zn5+HJ1MJ4Sns3kpoxnN83mZ7rnX8TOZpg6jsz9RyYJekQBveFB5w==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "7a95c3c1-7639-466f-9604-80382b24b840",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "be56d903-6231-4a30-8b91-44be14b95e5c" ],
        "secret" : [ "RvaoVRegrFfRoREBpIVDfA" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "0b6b95d5-9f41-4371-9b8d-b4da7a6f56c7",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEAqpHOPUUSCoL1rzkQhwEqjX0tllFHE6YsGsZegIbGOS0rfVXGlKQF+Sy3QANHv1AuwDxW/FLmhGaXfOQhqpwzwjLdaTCgXeqxI/wVl+/rdv9HpiQpioJw2SAVKNkjhDmfQN5kF77AuQj5wSjD+M197i7nQj7RxJD82T4CFPbz8nRFdd2l02wCT0a8245cPSJURN1ySfXg9i+B/GJCG60lQmszImFjArFOvcQCBVoSMg4Ed7juKSVYTxnn/WwyWmeLva7h3GXduDM8bh26+MdgaLlJfoGZi2/2pSMNWa2c9VVsw2QgJwP8gY0CPeUuuzgEzKsw2NjBvhnm7yewoDbyjQIDAQABAoIBAA3rXHq927qK3wofwdxajoKXCrTVHilEKsjmk54GdupXPXt6wqas+fslwzCQnqFwpYK03zOz1NxM06OdVFgBa5c3TRVBTXJMmDcZDRll5VUZK7DVtk7M1UZgFV9M1QFR2HqpNgmFXLcyPHt0XFsTSJRlic7ApKACEE2Zf1RUUNUMtjqMmyQg8K7WwjdQzLMNrpg4uIzl/ZaAU9a5CcN6wlPZojN/i3lTLGijRNdwnot4/uzDMfNo6cAYzvtGdE5z8u+gzlJVLdw5mnIriJxD2VxPHFQDc5Ojo9Yz5Y6e6ZTGMvzzNccriIUpoE9BvEA2kRa/OgoyOG71Q/x91O29jLsCgYEA1NtrU9eVhLGIGK5xbtnXU7+HdAnrER/UC7Yvh828VejIa2ZIvvX12KSKnm0XMOcorC6YTu/kw6+lCxnlVVINzxSo+31PBbtWI9/NFRfgPcvn3GIG0xaOlwe+h/MwSfV2jRLRl0VRDB7YmPkmlKqmnIXLVHWLRxYGgu5mWZku/ccCgYEAzSQzCgM8xGv/c07+d6BeabaBB0Z8gRrNj3Mkn6ZVb3OdDLh2adFk7DwqnXjGUr2ZUjvtJ6WtX9E4IcoET4K74Ji6j1Gje7iRPiBVeiE+8OMk0+IqE0lZ3RDBsIL4x3dz2tcOTK3HyriOEC2NBv8IlNV4gKmnjOa3ShpG6IX5nQsCgYAYRyqXtogsSV9/iS4Q+bHQsJDPkG4KVvoFl/MV50Zq+hEaBuGXPlCbNDFHXqP9hPAjq3Dd2AjctQT7HioFMEW4799SR/miarqpftZSaJXAFqjMfzXOD82VtmFp+jfwx5mM/69+NH7JBh+oWwqmfExin/QQHxQSuJVni6+K2qj8cwKBgFSaHUJ/20vWjl9rsJ59UPKgBc6OT0KfXy9N+UiuPIXeVGKuoIc7iDe1CI4xBPmSn+y+Miwrs7jUfCXTPrvb2sfhtO7uaFHZ6GyKwTXBCEgoJUQM/fU+RwVYp8i3+wmoRet2zbrp4H/GZTBe2M6N12gqMaw+S49chzLUa3Hx7uPJAoGAU9ayVlNJNCTDUzzylCS/i/xz1doJMphW0OdwlFTUSH9vAL+KKATQB/rOvbsgWj5AbUHx42k1paTWP6A+8spFZ0xffWcVDDA8e7gFzXFywR+SoXSrM0nfkzUFAfl0B/oeI4QPwKnok6yA2Se3bOHrpPhvgRNqyjrRYxYt8bVsr2o=" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICnTCCAYUCBgGY2EJ8aDANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdxdWFya3VzMB4XDTI1MDgyMzE4NDYzMloXDTM1MDgyMzE4NDgxMlowEjEQMA4GA1UEAwwHcXVhcmt1czCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKqRzj1FEgqC9a85EIcBKo19LZZRRxOmLBrGXoCGxjktK31VxpSkBfkst0ADR79QLsA8VvxS5oRml3zkIaqcM8Iy3WkwoF3qsSP8FZfv63b/R6YkKYqCcNkgFSjZI4Q5n0DeZBe+wLkI+cEow/jNfe4u50I+0cSQ/Nk+AhT28/J0RXXdpdNsAk9GvNuOXD0iVETdckn14PYvgfxiQhutJUJrMyJhYwKxTr3EAgVaEjIOBHe47iklWE8Z5/1sMlpni72u4dxl3bgzPG4duvjHYGi5SX6BmYtv9qUjDVmtnPVVbMNkICcD/IGNAj3lLrs4BMyrMNjYwb4Z5u8nsKA28o0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEACN1c1+uqUAsItLhkLMtuvY9MmHu/d+PseuJ4pvF2/Gf3i/xQolI5oVyqM7tFRs4XeM/ATxgSLMaJL3hxKclz6lfGFIdDbzPRlZN8iA6g/KnW7RuSINeatU3FPNcezQeXI10r0mpFmzoXrbu2CeimmW1BI3hMUwyrCWy00N+W3FnXuNH3KP/m8tuIKyGiHrZ1nxxwVTULyaDaTRkfSx5tMnAxMWH/SPYKz6PTV6CcTHZANGuoGbU3xXT+L2Ud0RDd/pIrFHM6JEWMPRjYR1fUSwwgy1qi3urGPEw+j/BGPI6S3lOpviR9yCgshHgWzq186XywwKwm2M9XVQauxqnDpw==" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "authenticationFlows" : [ {
    "id" : "655155ba-cedc-4c4d-afa7-95ebfb877f61",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6766101a-a85b-4fca-bc66-640a1351c5ce",
    "alias" : "Browser - Conditional 2FA",
    "description" : "Flow to determine if any 2FA is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "webauthn-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-recovery-authn-code-form",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4174f7bd-5084-40d6-b5ed-a7d93eceea01",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8e26d183-81f0-4516-8f6d-5806dfdb0a61",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e04c8808-2d16-4d10-9bf8-9dab501bd003",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "36d00911-cee2-45a6-bb9d-9d0c13909979",
    "alias" : "First broker login - Conditional 2FA",
    "description" : "Flow to determine if any 2FA is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "webauthn-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-recovery-authn-code-form",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c2073874-367e-47fe-a315-eb8e899fcb8b",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "27718054-c2b0-4260-b254-aadd77e5a5cf",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "563fc7ac-a49e-4f80-b8d5-2edaa174823d",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "79425801-0098-47c8-8b02-b6c755b111bd",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1227eacc-a398-4c40-8495-da578883b027",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional 2FA",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cd47d716-bfee-4571-9279-3b01b08d2e74",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "736c1a6e-c3ef-41e6-9a30-b083947f1bfd",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "22d736cc-05f7-4430-a7d3-ebca855d6f0b",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a05134eb-8371-454b-aefb-782517d82586",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6a226b85-01d6-41d2-a226-e109808baa53",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 50,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c3eb5e79-1863-44d9-a128-3c5e6a727c8a",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional 2FA",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "56336721-2df2-40f1-a10c-4c085b836cfd",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bdbbbbc2-b25b-47ab-a8e7-84ce28256e7b",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "968c309c-4193-403d-a1a8-0c0229d1d2e4",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a988ccec-e350-432f-97bc-d4a9a66a4d76",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "fb511adc-399e-4388-bddf-6ef3736c3701",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "ed932cc5-5c51-4b05-a656-f9e14e33458b",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "idp_link",
    "name" : "Linking Identity Provider",
    "providerId" : "idp_link",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 110,
    "config" : { }
  }, {
    "alias" : "CONFIGURE_RECOVERY_AUTHN_CODES",
    "name" : "Recovery Authentication Codes",
    "providerId" : "CONFIGURE_RECOVERY_AUTHN_CODES",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 120,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "26.3.3",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "verifiableCredentialsEnabled" : false,
  "adminPermissionsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}